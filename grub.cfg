insmod chain
insmod png
insmod part_msdos
insmod part_gpt
insmod fat
insmod ntfs
insmod syslinuxcfg
insmod cpuid
insmod ext2
insmod all_video
insmod configfile
insmod normal
insmod linux
insmod echo
insmod search
insmod regexp
insmod probe
insmod keystatus
insmod true
insmod udf
insmod iso9660
insmod font

set timeout=30

probe -u $root --set=rootuuid
set imgdevpath="/dev/disk/by-uuid/$rootuuid"
set isopath="/boot/ISOs"
export imgdevpath rootuuid isopath

if loadfont /multibootusb/grub/unicode.pf2 ; then
#if loadfont unicode ; then
    # Use shift key to avoid loading gfxterm
    if keystatus --shift ; then true ; else
        if [ "${grub_platform}" == "efi" ]; then
            insmod efi_gop
            insmod efi_uga
        else
            insmod vbe
            insmod vga
            set gfxmode=auto
            set gfxpayload=auto
            terminal_output gfxterm 
            if terminal_output gfxterm ; then true ; else
                terminal gfxterm
            fi
        fi
        insmod gfxterm
    fi
fi

menuentry 'Arch Linux' {
    set isofile="$isopath/archlinux.iso"
    loopback loop $isofile
    linux (loop)/arch/boot/x86_64/vmlinuz img_dev=$imgdevpath img_loop=$isofile earlymodules=loop
    initrd (loop)/arch/boot/intel_ucode.img (loop)/arch/boot/amd_ucode.img (loop)/arch/boot/x86_64/archiso.img
}


menuentry "Windows 10 X64 EFI (bootx64.efi)" {
    insmod part_gpt
    insmod fat
    insmod search_fs_uuid
    insmod chain
    # search --fs-uuid --set=root $hints_string $fs_uuid
    chainloader "$isopath/windows10/efi/boot/bootx64.efi"
}

menuentry "Microsoft Windows UEFI-GPT Setup (cdboot_noprompt.efi)" {
    insmod usbms
    insmod part_gpt
    insmod part_msdos
    insmod fat
    insmod search_fs_uuid
    insmod chain
    chainloader "$isopath/windows10/efi/microsoft/boot/cdboot_noprompt.efi"
}


menuentry "Windows 7 Bootmgr" {
     insmod ntfs
     insmod ntldr
     insmod part_msdos
     insmod search_fs_uuid
     search --no-floppy --fs-uuid --set=root cc3731d1-63e2-4910-b2ff-b26f2d9860c7
     ntldr /bootmgr
}

menuentry "Windows 7 UEFI/GPT" {
    insmod part_gpt
    insmod search_fs_uuid
    insmod chain
    search --fs-uuid --no-floppy --set=root cc3731d1-63e2-4910-b2ff-b26f2d9860c7
    chainloader ($root)/EFI/MICROSOFT/BOOT/bootmgfw.efi
}

if cpuid -l; then
    menuentry 'Boot Parted Magic 64bits' --unrestricted --class pmagic{
        set isofile="$isopath/pmagic_2020_02_23.iso"
        loopback loop $isofile
        set gfxpayload=text
        linux (loop)/pmagic/bzImage64 iso_filename=$isofile edd=on eject=no load_ramdisk=1
        initrd (loop)/pmagic/initrd.img (loop)/pmagic/fu.img (loop)/pmagic/m64.img
        boot
    }
else
    menuentry 'Boot Parted Magic 32bits' --unrestricted --class pmagic{
        set isofile="$isopath/pmagic_2020_02_23.iso"
        loopback loop $isofile
        set gfxpayload=text
        # linux (loop)/pmagic/bzImage iso_filename=$isofile edd=on vga=normal boot=live eject=no
        linux (loop)/pmagic/bzImage iso_filename=$isofile eject=no load_ramdisk=1
        initrd (loop)/pmagic/initrd.img (loop)/pmagic/fu.img (loop)/pmagic/m32.img
        boot
    }
fi

menuentry 'Reboot' {
    reboot
}

menuentry 'Shutdown'{
    halt
}
